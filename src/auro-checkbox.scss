// Copyright (c) 2020 Alaska Airlines. All right reserved. Licensed under the Apache-2.0 license
// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------

/* stylelint-disable custom-property-empty-line-before,
   custom-property-pattern,
   selector-max-class,
   scss/selector-nest-combinators,
   order/properties-order,
   max-nesting-depth,
   selector-max-combinators,
   selector-max-compound-selectors,
   selector-class-pattern,
   rule-empty-line-before,
   scss/selector-no-redundant-nesting-selector,
   no-descending-specificity,
   no-duplicate-selectors,
   declaration-empty-line-before */

// Import Auro tokens
@import "./../node_modules/@aurodesignsystem/design-tokens/dist/tokens/SCSSVariables";

@import "./../node_modules/@aurodesignsystem/webcorestylesheets/src/breakpoints";
@import "./../node_modules/@aurodesignsystem/webcorestylesheets/src/core";
@import './../node_modules/@aurodesignsystem/webcorestylesheets/src/utilityClasses/displayProperties';

// container styles - defines the look of the outer custom component
:host {
  display: block;
  --cbxLocation: var(--ds-size-50, $ds-size-50);
}

// layout styles - define any layout specifications for UI that is contained WITHIN the component
// never define layout that would cause effect on element outside the scope of this component

fieldset {
  all: unset;
}

.displayFlex {
  slot {
    @include auro_breakpoint--sm {
      display: flex;
    }
  }
}

.cbxContainer {
  position: relative;
  padding-left: var(--ds-size-100, $ds-size-100);
  padding-right: var(--ds-size-100, $ds-size-100);
  line-height: var(--ds-size-400, $ds-size-400);
}

.cbx--input {
  &:disabled {

    & + label {
      color: var(--ds-color-text-disabled-default, $ds-color-text-disabled-default);

      &:hover {
        cursor: auto;

        &:after {
          background-color: var(--ds-color-background-lightest, $ds-color-background-lightest);
        }
      }
    }

    & + .label--cbx {
      &:before {
        border-color: var(--ds-color-base-white, $ds-color-base-white);
      }

      &:after {
        border-color: var(--ds-color-text-disabled-default, $ds-color-text-disabled-default);
      }
    }
  }

  &:checked {
    & + .label--cbx {
      &:hover {
        &:after {
          background-color: var(--ds-color-ui-hover-default, $ds-color-ui-hover-default);
        }
      }

      &:after {
        opacity: 1;
        background-color: var(--ds-color-ui-default-default, $ds-color-ui-default-default);
        border-color: var(--ds-color-border-active-default, $ds-color-border-active-default);
      }

      &:before {
        transition: background-color 0.2s cubic-bezier(.35,.9,.4,.9);
        opacity: 1;
      }
    }

    &:disabled {
      & + .label--cbx {
        &:after {
          background-color: var(--ds-color-brand-gray-200, $ds-color-brand-gray-200);
          border-color: var(--ds-color-text-disabled-default, $ds-color-text-disabled-default);
        }
      }
    }

    & + .errorBorder {
      &:before {
        border-color: var(--ds-color-base-white, $ds-color-base-white);
      }
      &:after {
        border-color: var(--ds-color-border-error-default, $ds-color-border-error-default);
        background-color: var(--ds-color-border-error-default, $ds-color-border-error-default);
      }
      &:hover {
        &:after {
          background-color: var(--ds-color-alert-error-default, $ds-color-alert-error-default);
        }
      }
    }
  }
}

.label {
  margin-left: var(--ds-size-300, $ds-size-300);
  display: block;

  &:hover {
    cursor: pointer;

    &:after {
      background-color: var(--ds-color-ui-bkg-hover-default, $ds-color-ui-bkg-hover-default);
    }
  }
}

// No tokens available for values used here
.label--cbx {
  &:after {
    -webkit-tap-highlight-color: transparent;
    position: absolute;
    content: '';
    top: var(--ds-size-50, $ds-size-50);
    left: var(--cbxLocation);
    width: calc(var(--ds-size-200, $ds-size-200) + var(--ds-size-50, $ds-size-50));
    height: calc(var(--ds-size-200, $ds-size-200) + var(--ds-size-50, $ds-size-50));
    border-width: 1px;
    border-style: solid;
    border-color: var(--ds-color-brand-gray-500, $ds-color-brand-gray-500);
    border-radius: var(--ds-border-radius, $ds-border-radius);
    z-index: 0;
    background-color: var(--ds-color-base-white, $ds-color-base-white);
  }
}

.label--cbx {
  &.errorBorder {
    &:after {
      border-color: var(--ds-color-border-error-default, $ds-color-border-error-default);
    }
  }
}

.svg--cbx {
  position: absolute;
  top: var(--ds-size-25, $ds-size-25);
  left: var(--ds-size-25, $ds-size-25);

  padding-top: 3px;
  padding-bottom: 3px;

  z-index: 1;

  color: var(--ds-color-base-white, $ds-color-base-white);
}
